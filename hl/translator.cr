module HL::Translator
    def self.to_eng(input)
        input
            .gsub("H", "inc ")
            .gsub("h", "dec ")
            .gsub("!", "printchar ")
            .gsub("?", "printnum ")
            .gsub(",", "append ")
            .gsub(".", "stackclear ")
            .gsub("_", "registerclear ")
            .gsub("+", "add ")
            .gsub("-", "sub ")
            .gsub("*", "mul ")
            .gsub("/", "div ")
            .gsub("<", "input ")
            .gsub("=", "eq ")
            .gsub("(", "loop( ")
            .gsub("@", "at ")
            .gsub("[", "if[ ")
            .gsub("$", "get_stack_size ")
            .gsub("#", "get_from_stack ")
            .gsub("^", "delete_from_stack ")
            .gsub(/\s+/, " ")
    end

    def self.to_hl(input)
        input
            .gsub("delete_from_stack", "^")
            .gsub("get_from_stack", "#")
            .gsub("get_stack_size", "$")
            .gsub("inc", "H")
            .gsub("dec", "h")
            .gsub("printchar", "!")
            .gsub("printnum", "?")
            .gsub("append", ",")
            .gsub("stackclear", ".")
            .gsub("registerclear", "_")
            .gsub("add", "+")
            .gsub("sub", "-")
            .gsub("mul", "*")
            .gsub("div", "/")
            .gsub("input", "<")
            .gsub("eq", "=")
            .gsub("loop(", "(")
            .gsub("at", "@")
            .gsub("if[", "[")
            .gsub(" ", "")
    end
end